{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ibelaev/AlfaCode/TEST/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ibelaev/AlfaCode/TEST/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport StatementTypes from './types/statement';\nexport function deleteStatementActions(id) {\n  return {\n    type: StatementTypes.DeleteItem,\n    payload: {\n      id: id\n    }\n  };\n}\nexport function changeStatement(payload) {\n  return {\n    type: StatementTypes.ChangeItem,\n    payload: payload\n  };\n}\nexport function addStatement(text) {\n  var item = {\n    id: \"\".concat(Math.random()),\n    text: text,\n    primaryText: ''\n  };\n  return {\n    type: StatementTypes.AddStatements,\n    payload: item\n  };\n}\n\nfunction getData() {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      return resolve([{\n        text: 'We do love the great outdoors',\n        id: '1',\n        primaryText: 'Sweatcoin'\n      }, {\n        text: 'Human nature, that this',\n        id: '2',\n        primaryText: 'Redwoods'\n      }, {\n        text: 'Walk in the park',\n        id: '3',\n        primaryText: 'Session'\n      }]);\n    }, 900);\n  });\n}\n\nfunction getStatementsRequest() {\n  return {\n    type: StatementTypes.RequestStatements\n  };\n}\n\nfunction getStatementsSuccess(payload) {\n  return {\n    type: StatementTypes.SuccessStatements,\n    payload: payload\n  };\n}\n\nfunction getStatementsFailure() {\n  return {\n    type: StatementTypes.FaledStatements\n  };\n}\n\nexport function getStatements() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var statements;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch(getStatementsRequest());\n                _context.next = 4;\n                return getData();\n\n              case 4:\n                statements = _context.sent;\n                dispatch(getStatementsSuccess(statements));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(getStatementsFailure());\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/Users/ibelaev/AlfaCode/TEST/my-app/src/actions/statements-actions.ts"],"names":["StatementTypes","deleteStatementActions","id","type","DeleteItem","payload","changeStatement","ChangeItem","addStatement","text","item","Math","random","primaryText","AddStatements","getData","Promise","resolve","setTimeout","getStatementsRequest","RequestStatements","getStatementsSuccess","SuccessStatements","getStatementsFailure","FaledStatements","getStatements","dispatch","statements"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AAgBA,OAAO,SAASC,sBAAT,CAAgCC,EAAhC,EAA4C;AACjD,SAAO;AACLC,IAAAA,IAAI,EAAEH,cAAc,CAACI,UADhB;AAELC,IAAAA,OAAO,EAAE;AACPH,MAAAA,EAAE,EAAFA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASI,eAAT,CAAyBD,OAAzB,EAAmD;AACxD,SAAO;AACLF,IAAAA,IAAI,EAAEH,cAAc,CAACO,UADhB;AAELF,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAAoC;AACzC,MAAMC,IAAI,GAAG;AACXR,IAAAA,EAAE,YAAKS,IAAI,CAACC,MAAL,EAAL,CADS;AAEXH,IAAAA,IAAI,EAAJA,IAFW;AAGXI,IAAAA,WAAW,EAAE;AAHF,GAAb;AAMA,SAAO;AACLV,IAAAA,IAAI,EAAEH,cAAc,CAACc,aADhB;AAELT,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID;;AAED,SAASK,OAAT,GAA6C;AAC3C,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BC,IAAAA,UAAU,CACR;AAAA,aACED,OAAO,CAAC,CACN;AACER,QAAAA,IAAI,EAAE,+BADR;AAEEP,QAAAA,EAAE,EAAE,GAFN;AAGEW,QAAAA,WAAW,EAAE;AAHf,OADM,EAMN;AACEJ,QAAAA,IAAI,EAAE,yBADR;AAEEP,QAAAA,EAAE,EAAE,GAFN;AAGEW,QAAAA,WAAW,EAAE;AAHf,OANM,EAWN;AACEJ,QAAAA,IAAI,EAAE,kBADR;AAEEP,QAAAA,EAAE,EAAE,GAFN;AAGEW,QAAAA,WAAW,EAAE;AAHf,OAXM,CAAD,CADT;AAAA,KADQ,EAmBR,GAnBQ,CAAV;AAqBD,GAtBM,CAAP;AAuBD;;AAED,SAASM,oBAAT,GAAgC;AAC9B,SAAO;AACLhB,IAAAA,IAAI,EAAEH,cAAc,CAACoB;AADhB,GAAP;AAGD;;AAED,SAASC,oBAAT,CAA8BhB,OAA9B,EAAwD;AACtD,SAAO;AACLF,IAAAA,IAAI,EAAEH,cAAc,CAACsB,iBADhB;AAELjB,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;AAED,SAASkB,oBAAT,GAAgC;AAC9B,SAAO;AACLpB,IAAAA,IAAI,EAAEH,cAAc,CAACwB;AADhB,GAAP;AAGD;;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,gBAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AAFG;AAAA,uBAIsBJ,OAAO,EAJ7B;;AAAA;AAIGY,gBAAAA,UAJH;AAMHD,gBAAAA,QAAQ,CAACL,oBAAoB,CAACM,UAAD,CAArB,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHD,gBAAAA,QAAQ,CAACH,oBAAoB,EAArB,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD","sourcesContent":["import StatementTypes from './types/statement';\nimport { StatementItem } from '../common-types';\n\nexport type DeleteItemActions = ReturnType<typeof deleteStatementActions>;\n\nexport type ChangeItems = ReturnType<typeof changeStatement>;\n\nexport type AddItems = ReturnType<typeof addStatement>;\n\nexport type getStatements =\n  | ReturnType<typeof getStatementsRequest>\n  | ReturnType<typeof getStatementsSuccess>\n  | ReturnType<typeof getStatementsFailure>;\n\nexport type GenericStatements = DeleteItemActions | ChangeItems | AddItems | getStatements;\n\nexport function deleteStatementActions(id: string) {\n  return {\n    type: StatementTypes.DeleteItem as StatementTypes.DeleteItem,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function changeStatement(payload: StatementItem[]) {\n  return {\n    type: StatementTypes.ChangeItem as StatementTypes.ChangeItem,\n    payload,\n  };\n}\n\nexport function addStatement(text: string) {\n  const item = {\n    id: `${Math.random()}`,\n    text,\n    primaryText: '',\n  };\n\n  return {\n    type: StatementTypes.AddStatements as StatementTypes.AddStatements,\n    payload: item,\n  };\n}\n\nfunction getData(): Promise<StatementItem[]> {\n  return new Promise(resolve => {\n    setTimeout(\n      () =>\n        resolve([\n          {\n            text: 'We do love the great outdoors',\n            id: '1',\n            primaryText: 'Sweatcoin',\n          },\n          {\n            text: 'Human nature, that this',\n            id: '2',\n            primaryText: 'Redwoods',\n          },\n          {\n            text: 'Walk in the park',\n            id: '3',\n            primaryText: 'Session',\n          },\n        ]),\n      900,\n    );\n  });\n}\n\nfunction getStatementsRequest() {\n  return {\n    type: StatementTypes.RequestStatements as StatementTypes.RequestStatements,\n  };\n}\n\nfunction getStatementsSuccess(payload: StatementItem[]) {\n  return {\n    type: StatementTypes.SuccessStatements as StatementTypes.SuccessStatements,\n    payload,\n  };\n}\n\nfunction getStatementsFailure() {\n  return {\n    type: StatementTypes.FaledStatements as StatementTypes.FaledStatements,\n  };\n}\n\nexport function getStatements() {\n  return async (dispatch: any) => {\n    try {\n      dispatch(getStatementsRequest());\n\n      const statements = await getData();\n\n      dispatch(getStatementsSuccess(statements));\n    } catch (error) {\n      dispatch(getStatementsFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}