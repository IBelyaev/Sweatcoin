import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "none",
    "stroke": "currentColor",
    "strokeLinecap": "round",
    "strokeLinejoin": "round"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Package-title"
  }, title), React.createElement("path", {
    d: "M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z",
    key: "k0"
  }), ",", React.createElement("polyline", {
    points: "2.32 6.16 12 11 21.68 6.16",
    key: "k1"
  }), ",", React.createElement("line", {
    x1: 12,
    x2: 12,
    y1: 22.76,
    y2: 11,
    key: "k2"
  }), ",", React.createElement("line", {
    x1: 7,
    x2: 17,
    y1: 3.5,
    y2: 8.5,
    key: "k3"
  }));
});
export const Package = styled(StyledIcon).withConfig({
  displayName: "Package",
  componentId: "sc-1ntbahf-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Package.displayName = 'Package';
export const PackageDimensions = {
  height: 24,
  width: 24
};