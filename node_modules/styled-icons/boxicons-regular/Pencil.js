import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Pencil-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M18 7.586l-1.586-1.587L18 4.413 19.586 6zm-3-.172l-9.097 9.097-.529 2.114 2.114-.528L16.586 9z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M18.707 2.293a.999.999 0 0 0-1.414 0l-13 13a1.003 1.003 0 0 0-.263.464l-1 4a1 1 0 0 0 1.212 1.213l4-1c.176-.044.337-.135.465-.263l13-13a.999.999 0 0 0 0-1.414l-3-3zM7.488 18.097l-2.114.528.529-2.114L15 7.414 16.586 9l-9.098 9.097zM18 7.586L16.414 6 18 4.414 19.586 6 18 7.586z",
    key: "k1"
  }));
});
export const Pencil = styled(StyledIcon).withConfig({
  displayName: "Pencil",
  componentId: "sc-14nikkq-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Pencil.displayName = 'Pencil';
export const PencilDimensions = {
  height: 24,
  width: 24
};