"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MouseDimensions = exports.Mouse = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Mouse-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M11.975 20H12c2.757 0 5-2.243 5-5V9c0-2.751-2.25-4.994-5.015-5A5.007 5.007 0 0 0 7 9v6c0 2.804 2.186 5 4.975 5zM11 6h2v6h-2V6z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11.975 22H12c3.859 0 7-3.14 7-7V9c0-3.841-3.127-6.974-6.981-7h-.06C8.119 2.022 5 5.157 5 9v6c0 3.86 3.129 7 6.975 7zM7 9a5.007 5.007 0 0 1 4.985-5C14.75 4.006 17 6.249 17 9v6c0 2.757-2.243 5-5 5h-.025C9.186 20 7 17.804 7 15V9z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M11 6h2v6h-2z",
    key: "k2"
  }));
});
var Mouse = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Mousecjs__Mouse",
  componentId: "sc-936kis-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Mouse = Mouse;
Mouse.displayName = 'Mouse';
var MouseDimensions = {
  height: 24,
  width: 24
};
exports.MouseDimensions = MouseDimensions;