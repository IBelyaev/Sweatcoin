"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationDimensions = exports.Navigation = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Navigation-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M15 9l-3.211 5.963 2.007 3.61 4.565-12.934-12.934 4.565 3.61 2.007z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M2.004 9.916a.999.999 0 0 0 .511.958l6.821 3.79 3.79 6.821a.999.999 0 0 0 1.817-.152l6-17a1.001 1.001 0 0 0-1.276-1.276l-17 6a.998.998 0 0 0-.663.859zm16.357-4.277l-4.565 12.935-2.007-3.61L15 9l-5.963 3.211-3.61-2.007 12.934-4.565z",
    key: "k1"
  }));
});
var Navigation = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Navigationcjs__Navigation",
  componentId: "lpjggv-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Navigation = Navigation;
Navigation.displayName = 'Navigation';
var NavigationDimensions = {
  height: 24,
  width: 24
};
exports.NavigationDimensions = NavigationDimensions;