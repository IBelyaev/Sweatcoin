import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Navigation-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M15 9l-3.211 5.963 2.007 3.61 4.565-12.934-12.934 4.565 3.61 2.007z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M2.004 9.916a.999.999 0 0 0 .511.958l6.821 3.79 3.79 6.821a.999.999 0 0 0 1.817-.152l6-17a1.001 1.001 0 0 0-1.276-1.276l-17 6a.998.998 0 0 0-.663.859zm16.357-4.277l-4.565 12.935-2.007-3.61L15 9l-5.963 3.211-3.61-2.007 12.934-4.565z",
    key: "k1"
  }));
});
export const Navigation = styled(StyledIcon).withConfig({
  displayName: "Navigation",
  componentId: "qy63xg-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Navigation.displayName = 'Navigation';
export const NavigationDimensions = {
  height: 24,
  width: 24
};