import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Ribbon-title"
  }, title), React.createElement("path", {
    d: "M13.627 14.949C15.468 13.32 17 11.279 17 9c0-3.687-2.583-5-5-5S7 5.313 7 9c0 2.278 1.531 4.318 3.371 5.948-1.439.982-2.882 1.739-3.777 2.138l.813 1.828A28.52 28.52 0 0 0 12 16.243a28.547 28.547 0 0 0 4.594 2.671l.813-1.828c-.897-.398-2.34-1.154-3.78-2.137zm-1.629-1.226C10.337 12.33 9 10.675 9 9c0-2.479 1.632-3 3-3s3 .521 3 3c0 1.673-1.34 3.329-3.002 4.723z",
    key: "k0"
  }));
});
export const Ribbon = styled(StyledIcon).withConfig({
  displayName: "Ribbon",
  componentId: "i315xa-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Ribbon.displayName = 'Ribbon';
export const RibbonDimensions = {
  height: 24,
  width: 24
};