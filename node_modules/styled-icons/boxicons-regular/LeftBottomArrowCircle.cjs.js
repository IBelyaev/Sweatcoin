"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LeftBottomArrowCircleDimensions = exports.LeftBottomArrowCircle = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "LeftBottomArrowCircle-title"
  }, title), React.createElement("path", {
    d: "M12 2.006A9.926 9.926 0 0 0 4.929 4.93c-3.898 3.898-3.898 10.242 0 14.142 1.885 1.885 4.396 2.923 7.071 2.923s5.187-1.038 7.071-2.923c3.898-3.899 3.898-10.243 0-14.142A9.926 9.926 0 0 0 12 2.006zm5.657 15.651c-1.507 1.507-3.516 2.337-5.657 2.337s-4.15-.83-5.657-2.337c-3.118-3.119-3.118-8.194 0-11.313C7.851 4.836 9.859 4.006 12 4.006s4.149.83 5.657 2.338c3.118 3.119 3.118 8.194 0 11.313z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M14.293 8.293l-3.168 3.168L9 9.336V15h5.663l-2.124-2.125 3.168-3.168z",
    key: "k1"
  }));
});
var LeftBottomArrowCircle = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "LeftBottomArrowCirclecjs__LeftBottomArrowCircle",
  componentId: "xsl87x-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.LeftBottomArrowCircle = LeftBottomArrowCircle;
LeftBottomArrowCircle.displayName = 'LeftBottomArrowCircle';
var LeftBottomArrowCircleDimensions = {
  height: 24,
  width: 24
};
exports.LeftBottomArrowCircleDimensions = LeftBottomArrowCircleDimensions;