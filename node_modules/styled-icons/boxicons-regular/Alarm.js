import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Alarm-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M12 6c-3.794 0-7 3.206-7 7s3.206 7 7 7 7-3.206 7-7-3.206-7-7-7zm1 8h-2V8h2v4h4v2h-4z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12 4c-4.879 0-9 4.121-9 9s4.121 9 9 9 9-4.121 9-9-4.121-9-9-9zm0 16c-3.794 0-7-3.206-7-7s3.206-7 7-7 7 3.206 7 7-3.206 7-7 7z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M13 12V8h-2v6h6v-2zm4.284-8.293l1.412-1.416 3.01 3.001-1.413 1.416zM6.698 3.706l-2.99 2.999L2.29 5.292l2.99-2.998z",
    key: "k2"
  }));
});
export const Alarm = styled(StyledIcon).withConfig({
  displayName: "Alarm",
  componentId: "sc-1m4phrb-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Alarm.displayName = 'Alarm';
export const AlarmDimensions = {
  height: 24,
  width: 24
};