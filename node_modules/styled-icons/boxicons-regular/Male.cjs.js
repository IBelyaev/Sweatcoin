"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MaleDimensions = exports.Male = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Male-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M8.5 20c2.481 0 4.5-2.019 4.5-4.5S10.981 11 8.5 11 4 13.019 4 15.5 6.019 20 8.5 20z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M8.5 22c3.584 0 6.5-2.916 6.5-6.5a6.455 6.455 0 0 0-1.259-3.828l4.466-4.465L20 9V4h-5l1.793 1.793-4.466 4.465A6.456 6.456 0 0 0 8.5 9C4.916 9 2 11.916 2 15.5S4.916 22 8.5 22zm0-11c2.481 0 4.5 2.019 4.5 4.5S10.981 20 8.5 20 4 17.981 4 15.5 6.019 11 8.5 11z",
    key: "k1"
  }));
});
var Male = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Malecjs__Male",
  componentId: "sc-193kse7-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Male = Male;
Male.displayName = 'Male';
var MaleDimensions = {
  height: 24,
  width: 24
};
exports.MaleDimensions = MaleDimensions;