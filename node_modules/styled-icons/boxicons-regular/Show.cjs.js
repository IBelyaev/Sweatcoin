"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ShowDimensions = exports.Show = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Show-title"
  }, title), React.createElement("path", {
    d: "M12 9a3.02 3.02 0 0 0-3 3c0 1.642 1.358 3 3 3 1.641 0 3-1.358 3-3 0-1.641-1.359-3-3-3z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12 5c-7.633 0-9.927 6.617-9.948 6.684a.994.994 0 0 0 0 .633C2.073 12.383 4.367 19 12 19s9.927-6.617 9.948-6.684a.994.994 0 0 0 0-.633C21.927 11.617 19.633 5 12 5zm0 12c-5.351 0-7.424-3.846-7.926-5C4.578 10.842 6.652 7 12 7c5.351 0 7.424 3.846 7.926 5-.504 1.158-2.578 5-7.926 5z",
    key: "k1"
  }));
});
var Show = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Showcjs__Show",
  componentId: "sc-2fk1sn-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Show = Show;
Show.displayName = 'Show';
var ShowDimensions = {
  height: 24,
  width: 24
};
exports.ShowDimensions = ShowDimensions;