"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UpArrowDimensions = exports.UpArrow = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "UpArrow-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M6.821 16h10.358L12 7.863z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12.844 5.463c-.367-.576-1.32-.576-1.688 0l-7 11a1.003 1.003 0 0 0-.033 1.019c.176.319.512.518.877.518h14a1.001 1.001 0 0 0 .844-1.538l-7-10.999zM6.821 16L12 7.863 17.179 16H6.821z",
    key: "k1"
  }));
});
var UpArrow = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "UpArrowcjs__UpArrow",
  componentId: "sc-1osg4zc-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.UpArrow = UpArrow;
UpArrow.displayName = 'UpArrow';
var UpArrowDimensions = {
  height: 24,
  width: 24
};
exports.UpArrowDimensions = UpArrowDimensions;