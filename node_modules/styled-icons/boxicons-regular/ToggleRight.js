import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "ToggleRight-title"
  }, title), React.createElement("path", {
    d: "M16 10c-1.085 0-2 .915-2 2s.915 2 2 2 2-.915 2-2-.915-2-2-2z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M16 6H8c-3.296 0-5.982 2.682-6 5.986v.042A6.01 6.01 0 0 0 8 18h8c3.309 0 6-2.691 6-6s-2.691-6-6-6zm0 10H8a4.006 4.006 0 0 1-4-3.99C4.004 9.799 5.798 8 8 8h8c2.206 0 4 1.794 4 4s-1.794 4-4 4z",
    key: "k1"
  }));
});
export const ToggleRight = styled(StyledIcon).withConfig({
  displayName: "ToggleRight",
  componentId: "sc-99v451-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
ToggleRight.displayName = 'ToggleRight';
export const ToggleRightDimensions = {
  height: 24,
  width: 24
};