import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Closet-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M5.63 18h12.74L12 12.338z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M13 10.551v-.678A4.005 4.005 0 0 0 16 6c0-2.206-1.794-4-4-4S8 3.794 8 6h2c0-1.103.897-2 2-2s2 .897 2 2-.897 2-2 2a1 1 0 0 0-1 1v1.551l-8.665 7.702A1.001 1.001 0 0 0 3 20h18a1.001 1.001 0 0 0 .664-1.748L13 10.551zM5.63 18L12 12.338 18.37 18H5.63z",
    key: "k1"
  }));
});
export const Closet = styled(StyledIcon).withConfig({
  displayName: "Closet",
  componentId: "sc-1xxb6gx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Closet.displayName = 'Closet';
export const ClosetDimensions = {
  height: 24,
  width: 24
};