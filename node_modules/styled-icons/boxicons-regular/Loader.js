import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Loader-title"
  }, title), React.createElement("path", {
    d: "M4 11h4v2H4zm12 0h4v2h-4zm-5 5h2v4h-2zm0-12h2v4h-2zM5.635 7.05L7.05 5.636l2.828 2.828L8.464 9.88zm12.729 9.9l-1.414 1.414-2.829-2.828 1.414-1.415zM7.05 18.364L5.637 16.95l2.829-2.829 1.414 1.415zm8.485-8.485l-1.414-1.414 2.828-2.829 1.415 1.414z",
    key: "k0"
  }));
});
export const Loader = styled(StyledIcon).withConfig({
  displayName: "Loader",
  componentId: "sc-1sh7czl-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Loader.displayName = 'Loader';
export const LoaderDimensions = {
  height: 24,
  width: 24
};