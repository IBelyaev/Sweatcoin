import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Usb-title"
  }, title), React.createElement("path", {
    d: "M8 11a2 2 0 0 0-4 0c0 .738.404 1.376 1 1.723V13c0 2.206 1.794 4 4 4h2v1.277A1.99 1.99 0 0 0 10 20a2 2 0 0 0 4 0c0-.738-.404-1.376-1-1.723V14h2c2.206 0 4-1.794 4-4h1V6h-4v4h1c0 1.103-.897 2-2 2h-2V6h2l-3-4-3 4h2v9H9c-1.103 0-2-.897-2-2v-.277c.596-.347 1-.985 1-1.723z",
    key: "k0"
  }));
});
export const Usb = styled(StyledIcon).withConfig({
  displayName: "Usb",
  componentId: "zoxtk7-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Usb.displayName = 'Usb';
export const UsbDimensions = {
  height: 24,
  width: 24
};