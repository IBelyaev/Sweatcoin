"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CrownDimensions = exports.Crown = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Crown-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M5 17h14v2H5zm3.781-7.375c-.381.475-1.182.475-1.563 0L5 6.851V15h14V6.851l-2.219 2.774c-.381.475-1.182.475-1.563 0L12 5.601 8.781 9.625z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11.219 3.375L8 7.399 4.781 3.375A1.002 1.002 0 0 0 3 4v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1.002 1.002 0 0 0-1.781-.625L16 7.399l-3.219-4.024c-.381-.474-1.181-.474-1.562 0zM5 19v-2h14v2H5zm10.219-9.375c.381.475 1.182.475 1.563 0L19 6.851V15H5V6.851l2.219 2.774c.381.475 1.182.475 1.563 0L12 5.601l3.219 4.024z",
    key: "k1"
  }));
});
var Crown = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Crowncjs__Crown",
  componentId: "sc-1s4l03m-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Crown = Crown;
Crown.displayName = 'Crown';
var CrownDimensions = {
  height: 24,
  width: 24
};
exports.CrownDimensions = CrownDimensions;