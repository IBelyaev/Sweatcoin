import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Collapse-title"
  }, title), React.createElement("path", {
    d: "M4.707 20.707l3.172-3.172L10 19.656V14H4.344l2.121 2.121-3.172 3.172zM19.293 3.293l-3.172 3.172L14 4.344V10h5.656l-2.121-2.121 3.172-3.172zM14 14v5.656l2.121-2.121 3.172 3.172 1.414-1.414-3.172-3.172L19.656 14zm-4-9.656L7.879 6.465 4.707 3.293 3.293 4.707l3.172 3.172L4.344 10H10z",
    key: "k0"
  }));
});
export const Collapse = styled(StyledIcon).withConfig({
  displayName: "Collapse",
  componentId: "sc-1whzxd6-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Collapse.displayName = 'Collapse';
export const CollapseDimensions = {
  height: 24,
  width: 24
};