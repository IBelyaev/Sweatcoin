import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "DockTop-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M5 5h14v3H5zm0 5h14v9H5z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M20 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-1 2v3H5V5h14zM5 19v-9h14v9H5z",
    key: "k1"
  }));
});
export const DockTop = styled(StyledIcon).withConfig({
  displayName: "DockTop",
  componentId: "tpiw99-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
DockTop.displayName = 'DockTop';
export const DockTopDimensions = {
  height: 24,
  width: 24
};