import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Edit-title"
  }, title), React.createElement("path", {
    d: "M21.752 5.337l-3-3a.999.999 0 0 0-1.414 0l-8.966 8.965a1.003 1.003 0 0 0-.263.464l-1 4a1 1 0 0 0 1.212 1.213l4-1c.176-.044.337-.135.465-.263l8.966-8.965a1 1 0 0 0 0-1.414zm-10.185 8.77l-2.114.528.529-2.114 5.063-5.062 1.586 1.585-5.064 5.063zm6.478-6.477l-1.586-1.585 1.586-1.586 1.586 1.586-1.586 1.585z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M19 19H5V5h7V3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-8h-2v7z",
    key: "k1"
  }));
});
export const Edit = styled(StyledIcon).withConfig({
  displayName: "Edit",
  componentId: "nxo0ao-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Edit.displayName = 'Edit';
export const EditDimensions = {
  height: 24,
  width: 24
};