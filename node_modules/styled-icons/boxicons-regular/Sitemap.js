import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Sitemap-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M10 4h4v4h-4z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M17 18v4h4v-4h-1v-.99c0-2.206-1.794-4-4-4h-3V10h2a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2v3.01H8a4.003 4.003 0 0 0-3.996 3.911.857.857 0 0 0-.004.089V18H3v4h4v-4H6v-.913a.972.972 0 0 0 .003-.077c0-1.103.896-2 2-2H11V18h-1v4h4v-4h-1v-2.99h3c1.103 0 2 .897 2 2V18h-1zM10 8V4h4v4h-4z",
    key: "k1"
  }));
});
export const Sitemap = styled(StyledIcon).withConfig({
  displayName: "Sitemap",
  componentId: "yapsf9-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Sitemap.displayName = 'Sitemap';
export const SitemapDimensions = {
  height: 24,
  width: 24
};