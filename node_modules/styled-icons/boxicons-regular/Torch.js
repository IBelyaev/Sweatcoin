import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Torch-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M8.46 13.112l.525.283L9 14v6h6v-6.618l.553-.276C15.6 13.08 17 12.298 17 10H7c0 2.298 1.4 3.08 1.46 3.112zM11 14h2v4h-2v-4z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11 14h2v4h-2zm0-12h2v4h-2zm-5.293.293l3 3-1.414 1.414-3-3zm12.586 0l1.414 1.414-3 3-1.415-1.414z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M18 8H6a1 1 0 0 0-1 1v1c0 2.554 1.248 3.929 2 4.526V21a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-6.474c.752-.597 2-1.973 2-4.526V9a1 1 0 0 0-1-1zm-2.447 5.105l-.553.277V20H9v-6l-.015-.604-.525-.284C8.4 13.08 7 12.298 7 10h10c0 2.298-1.4 3.08-1.447 3.105z",
    key: "k2"
  }));
});
export const Torch = styled(StyledIcon).withConfig({
  displayName: "Torch",
  componentId: "hc5y7q-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Torch.displayName = 'Torch';
export const TorchDimensions = {
  height: 24,
  width: 24
};