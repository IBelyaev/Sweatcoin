"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BluetoothDimensions = exports.Bluetooth = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Bluetooth-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M12 13.817V19l3.362-2.521zM12 5v5.183l3.362-2.662z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M5.621 17.784L10 14.317V21a1.001 1.001 0 0 0 1.6.8l6-4.5a1 1 0 0 0 .021-1.584L12.927 12l4.694-3.716A1.001 1.001 0 0 0 17.6 6.7l-6-4.5A1.001 1.001 0 0 0 10 3v6.683L5.621 6.216 4.379 7.784 9.705 12l-5.326 4.216 1.242 1.568zM12 5l3.362 2.521L12 10.183V5zm0 8.817l3.362 2.662L12 19v-5.183z",
    key: "k1"
  }));
});
var Bluetooth = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Bluetoothcjs__Bluetooth",
  componentId: "sc-4qiyrp-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Bluetooth = Bluetooth;
Bluetooth.displayName = 'Bluetooth';
var BluetoothDimensions = {
  height: 24,
  width: 24
};
exports.BluetoothDimensions = BluetoothDimensions;