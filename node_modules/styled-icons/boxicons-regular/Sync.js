import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Sync-title"
  }, title), React.createElement("path", {
    d: "M13 7.106c2.25.478 4 2.525 4 4.894 0 1.416-.501 2.683-1.411 3.569l1.395 1.433C18.284 15.736 19 13.96 19 12c0-3.455-2.66-6.413-6-6.917V2L9 6l4 4V7.106zm-1.902 11.826v2.947l4-4-4-4v3.027C8.802 16.466 7 14.402 7 12c0-1.416.501-2.684 1.411-3.57L7.017 6.997C5.716 8.263 5 10.04 5 12c0 3.489 2.712 6.473 6.098 6.932z",
    key: "k0"
  }));
});
export const Sync = styled(StyledIcon).withConfig({
  displayName: "Sync",
  componentId: "dgx8x7-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Sync.displayName = 'Sync';
export const SyncDimensions = {
  height: 24,
  width: 24
};