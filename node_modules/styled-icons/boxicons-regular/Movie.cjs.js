"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MovieDimensions = exports.Movie = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Movie-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M19.535 10H20V6h-3.132zM7.132 10L4.465 6H4v4zm2.403 0h2.597L9.465 6H6.868zM4 12h16v7H4zm10.465-6h-2.597l2.667 4h2.597z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M3 21h18a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1zm17-2H4v-7h16v7zm-5.465-9l-2.667-4h2.597l2.667 4h-2.597zm-2.403 0H9.535L6.868 6h2.597l2.667 4zM20 10h-.465l-2.667-4H20v4zM4.465 6l2.667 4H4V6h.465z",
    key: "k1"
  }));
});
var Movie = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Moviecjs__Movie",
  componentId: "ndtur1-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Movie = Movie;
Movie.displayName = 'Movie';
var MovieDimensions = {
  height: 24,
  width: 24
};
exports.MovieDimensions = MovieDimensions;