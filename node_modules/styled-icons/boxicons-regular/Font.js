import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Font-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M14.896 13L12 6.426 9.108 13z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M6.028 20l2.2-5h7.55l2.203 5H20L13.427 4.624A1.002 1.002 0 0 0 12.5 4h-1a1 1 0 0 0-.926.624L4 20h2.028zM12 6.426L14.896 13H9.108L12 6.426z",
    key: "k1"
  }));
});
export const Font = styled(StyledIcon).withConfig({
  displayName: "Font",
  componentId: "sc-1ade0in-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Font.displayName = 'Font';
export const FontDimensions = {
  height: 24,
  width: 24
};