import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Archive-title"
  }, title), React.createElement("path", {
    d: "M7 14h10a1 1 0 0 0 1-1v-3h-2v2H8v-2H6v3a1 1 0 0 0 1 1z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M21.801 6.402L18.81 2.401A1 1 0 0 0 18.009 2h-12a.997.997 0 0 0-.799.398l-3.009 4 .014.01A.982.982 0 0 0 2 7v12a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V7a.98.98 0 0 0-.212-.588l.013-.01zM6.508 4h11l1.495 2H5.004l1.504-2zM20 18H4V8h16v10z",
    key: "k1"
  }));
});
export const Archive = styled(StyledIcon).withConfig({
  displayName: "Archive",
  componentId: "sc-1urrtgm-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Archive.displayName = 'Archive';
export const ArchiveDimensions = {
  height: 24,
  width: 24
};