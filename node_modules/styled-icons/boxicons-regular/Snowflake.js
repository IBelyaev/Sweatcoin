import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Snowflake-title"
  }, title), React.createElement("path", {
    d: "M20.707 8.707l-1.414-1.414L15.586 11H13V8.414l3.707-3.707-1.414-1.414L13 5.586V2h-2v3.586L8.707 3.293 7.293 4.707 11 8.414V11H8.414L4.707 7.293 3.293 8.707 5.586 11H2v2h3.586l-2.293 2.293 1.414 1.414L8.414 13H11v2.586l-3.707 3.707 1.414 1.414L11 18.414V22h2v-3.586l2.293 2.293 1.414-1.414L13 15.586V13h2.586l3.707 3.707 1.414-1.414L18.414 13H22v-2h-3.586z",
    key: "k0"
  }));
});
export const Snowflake = styled(StyledIcon).withConfig({
  displayName: "Snowflake",
  componentId: "sc-12kfv8h-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Snowflake.displayName = 'Snowflake';
export const SnowflakeDimensions = {
  height: 24,
  width: 24
};