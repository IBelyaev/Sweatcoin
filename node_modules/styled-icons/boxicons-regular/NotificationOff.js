import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "NotificationOff-title"
  }, title), React.createElement("path", {
    d: "M21.71 20.296L20 18.586V11h-2v5.586L7.414 6H13V4H5.414L3.71 2.296 2.296 3.71l18 18z",
    key: "k0"
  }), ",", React.createElement("circle", {
    cx: 18,
    cy: 6,
    r: 3,
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M4 8.121V19a1 1 0 0 0 1 1h10.879l-2-2H6v-7.879l-2-2z",
    key: "k2"
  }));
});
export const NotificationOff = styled(StyledIcon).withConfig({
  displayName: "NotificationOff",
  componentId: "sc-1pd1nss-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
NotificationOff.displayName = 'NotificationOff';
export const NotificationOffDimensions = {
  height: 24,
  width: 24
};