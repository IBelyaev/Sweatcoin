"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlassesDimensions = exports.Glasses = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Glasses-title"
  }, title), React.createElement("path", {
    d: "M22 11h-1.142c-.447-1.721-2-3-3.858-3s-3.411 1.279-3.858 3h-2.283c-.447-1.721-2-3-3.858-3S3.59 9.279 3.143 11H2v2h1.142c.447 1.721 2 3 3.858 3s3.411-1.279 3.858-3h2.283c.447 1.721 2 3 3.858 3s3.411-1.279 3.858-3H22v-2zM7 14c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm10 0c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2z",
    key: "k0"
  }));
});
var Glasses = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Glassescjs__Glasses",
  componentId: "sc-19jtm4s-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Glasses = Glasses;
Glasses.displayName = 'Glasses';
var GlassesDimensions = {
  height: 24,
  width: 24
};
exports.GlassesDimensions = GlassesDimensions;