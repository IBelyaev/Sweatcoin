import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "ChevronsRight-title"
  }, title), React.createElement("path", {
    d: "M10.296 7.71L14.621 12l-4.325 4.29 1.408 1.42L17.461 12l-5.757-5.71z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M6.704 17.71L12.461 12 6.704 6.29 5.296 7.71 9.621 12l-4.325 4.29z",
    key: "k1"
  }));
});
export const ChevronsRight = styled(StyledIcon).withConfig({
  displayName: "ChevronsRight",
  componentId: "sc-84ue4d-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
ChevronsRight.displayName = 'ChevronsRight';
export const ChevronsRightDimensions = {
  height: 24,
  width: 24
};