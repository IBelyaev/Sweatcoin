import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Handicap-title"
  }, title), React.createElement("circle", {
    cx: 12.984,
    cy: 3.984,
    r: 2.016,
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M17 11V9h-3V7h-2v7c0 .409.249.776.629.929l4.602 1.841 1.841 4.602 1.857-.742-2-5a1 1 0 0 0-.558-.558L14 13.323V11h3z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M10.005 12v-2C6.693 10 4 12.693 4 16.005s2.693 6.005 6.005 6.005a6.016 6.016 0 0 0 5.47-3.546l-1.824-.822a4.01 4.01 0 0 1-3.646 2.368C7.797 20.01 6 18.213 6 16.005S7.797 12 10.005 12z",
    key: "k2"
  }));
});
export const Handicap = styled(StyledIcon).withConfig({
  displayName: "Handicap",
  componentId: "sc-11s17yn-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Handicap.displayName = 'Handicap';
export const HandicapDimensions = {
  height: 24,
  width: 24
};