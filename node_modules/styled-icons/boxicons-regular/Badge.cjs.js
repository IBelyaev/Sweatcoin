"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BadgeDimensions = exports.Badge = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Badge-title"
  }, title), React.createElement("path", {
    d: "M12 14.8c-2.197 0-4 1.6-4 3.2h8c0-1.534-1.803-3.2-4-3.2zM10 12c0 1.151.85 2 2 2s2-.849 2-2-.85-2-2-2-2 .849-2 2z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M18.994 2H5.006a1 1 0 0 0-1 1v18a1 1 0 0 0 1 1h13.988a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1zm-1 18H6.006V4h11.988v16z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M9 6h6v2H9z",
    key: "k2"
  }));
});
var Badge = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Badgecjs__Badge",
  componentId: "sc-18um10w-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Badge = Badge;
Badge.displayName = 'Badge';
var BadgeDimensions = {
  height: 24,
  width: 24
};
exports.BadgeDimensions = BadgeDimensions;