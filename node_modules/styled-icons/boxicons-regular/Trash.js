import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Trash-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M9 4h6v2H9zm8 16V8H7v12h10zm-4-10h2v8h-2v-8zm-4 0h2v8H9v-8z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V8h2V6h-4V3a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v3H3v2h2v13zM9 4h6v2H9V4zM8 8h9v12H7V8h1z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M9 10h2v8H9zm4 0h2v8h-2z",
    key: "k2"
  }));
});
export const Trash = styled(StyledIcon).withConfig({
  displayName: "Trash",
  componentId: "mymew7-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Trash.displayName = 'Trash';
export const TrashDimensions = {
  height: 24,
  width: 24
};