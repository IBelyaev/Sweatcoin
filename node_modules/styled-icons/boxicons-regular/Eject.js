import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Eject-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M8.943 12h6.114L12 7.721z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11.187 5.419l-5 7A1 1 0 0 0 7 14h10a1.001 1.001 0 0 0 .814-1.581l-5-7c-.376-.526-1.252-.526-1.627 0zM8.943 12L12 7.721 15.057 12H8.943zM6 16h12v2H6z",
    key: "k1"
  }));
});
export const Eject = styled(StyledIcon).withConfig({
  displayName: "Eject",
  componentId: "il95cb-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Eject.displayName = 'Eject';
export const EjectDimensions = {
  height: 24,
  width: 24
};