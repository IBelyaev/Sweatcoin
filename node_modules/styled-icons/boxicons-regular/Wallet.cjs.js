"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletDimensions = exports.Wallet = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Wallet-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M5.012 7H18V5H5c-.45.012-1 .195-1 1s.55.988 1.012 1zM4 8.833V17c0 .805.55.988 1.012 1H20V9H5c-.309 0-.654-.052-1-.167zM16 12h2v3h-2v-3z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M16 12h2v3h-2z",
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M21 7h-1V4a1 1 0 0 0-1-1H5c-1.206 0-3 .799-3 3v11c0 2.201 1.794 3 3 3h16a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1zM5 5h13v2H5.012C4.55 6.988 4 6.805 4 6s.55-.988 1-1zm15 13H5.012C4.55 17.988 4 17.805 4 17V8.833c.346.115.691.167 1 .167h15v9z",
    key: "k2"
  }));
});
var Wallet = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Walletcjs__Wallet",
  componentId: "sc-4xs9f-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Wallet = Wallet;
Wallet.displayName = 'Wallet';
var WalletDimensions = {
  height: 24,
  width: 24
};
exports.WalletDimensions = WalletDimensions;