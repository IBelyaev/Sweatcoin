"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MagnetDimensions = exports.Magnet = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Magnet-title"
  }, title), React.createElement("path", {
    d: "M19 2h-4a1 1 0 0 0-1 1v11c0 1.103-.897 2-2 2s-2-.897-2-2V3a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v11c0 4.411 3.589 8 8 8s8-3.589 8-8V3a1 1 0 0 0-1-1zm-3 2h2v2h-2V4zM6 4h2v2H6V4zm12 10c0 3.309-2.691 6-6 6s-6-2.691-6-6V8h2v6c0 2.206 1.794 4 4 4s4-1.794 4-4V8h2v6z",
    key: "k0"
  }));
});
var Magnet = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Magnetcjs__Magnet",
  componentId: "sc-12d4x4c-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Magnet = Magnet;
Magnet.displayName = 'Magnet';
var MagnetDimensions = {
  height: 24,
  width: 24
};
exports.MagnetDimensions = MagnetDimensions;