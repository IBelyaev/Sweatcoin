import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "ColorFill-title"
  }, title), React.createElement("path", {
    d: "M10.717 4.708L9.303 3.293 7.889 4.707l1.414 1.415-6.363 6.363 7.777 7.778 7.778-7.778-7.778-7.777zm0 2.828l4.95 4.949H5.768l4.949-4.949zm8.485 5.656c-.091.065-2.337 1.821-2.327 3.752 0 1.323 1.077 2.4 2.4 2.4a2.401 2.401 0 0 0 2.4-2.398c.011-1.933-2.381-3.689-2.473-3.754z",
    key: "k0"
  }));
});
export const ColorFill = styled(StyledIcon).withConfig({
  displayName: "ColorFill",
  componentId: "sc-5zotzz-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
ColorFill.displayName = 'ColorFill';
export const ColorFillDimensions = {
  height: 24,
  width: 24
};