"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LeftTopArrowCircleDimensions = exports.LeftTopArrowCircle = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "LeftTopArrowCircle-title"
  }, title), React.createElement("path", {
    d: "M12 2.007a9.928 9.928 0 0 0-7.071 2.922c-3.899 3.899-3.899 10.243 0 14.143 1.885 1.885 4.396 2.923 7.071 2.923s5.186-1.038 7.07-2.923c1.886-1.885 2.924-4.396 2.924-7.071S20.956 6.814 19.07 4.93A9.923 9.923 0 0 0 12 2.007zm5.656 15.65c-1.507 1.507-3.516 2.337-5.656 2.337s-4.15-.83-5.657-2.337c-3.119-3.119-3.119-8.195 0-11.314C7.85 4.836 9.859 4.007 12 4.007s4.149.829 5.656 2.336C19.164 7.851 19.994 9.86 19.994 12s-.83 4.149-2.338 5.657z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M14.664 9H9v5.663l2.125-2.124 3.168 3.168 1.414-1.414-3.168-3.168z",
    key: "k1"
  }));
});
var LeftTopArrowCircle = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "LeftTopArrowCirclecjs__LeftTopArrowCircle",
  componentId: "sc-7txi4g-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.LeftTopArrowCircle = LeftTopArrowCircle;
LeftTopArrowCircle.displayName = 'LeftTopArrowCircle';
var LeftTopArrowCircleDimensions = {
  height: 24,
  width: 24
};
exports.LeftTopArrowCircleDimensions = LeftTopArrowCircleDimensions;