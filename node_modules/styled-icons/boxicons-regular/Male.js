import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Male-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M8.5 20c2.481 0 4.5-2.019 4.5-4.5S10.981 11 8.5 11 4 13.019 4 15.5 6.019 20 8.5 20z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M8.5 22c3.584 0 6.5-2.916 6.5-6.5a6.455 6.455 0 0 0-1.259-3.828l4.466-4.465L20 9V4h-5l1.793 1.793-4.466 4.465A6.456 6.456 0 0 0 8.5 9C4.916 9 2 11.916 2 15.5S4.916 22 8.5 22zm0-11c2.481 0 4.5 2.019 4.5 4.5S10.981 20 8.5 20 4 17.981 4 15.5 6.019 11 8.5 11z",
    key: "k1"
  }));
});
export const Male = styled(StyledIcon).withConfig({
  displayName: "Male",
  componentId: "cdh03u-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Male.displayName = 'Male';
export const MaleDimensions = {
  height: 24,
  width: 24
};