import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Glass-title"
  }, title), React.createElement("path", {
    d: "M12.153.263a.5.5 0 0 0-.44-.263H4.288a.5.5 0 0 0-.44.263C3.294 1.295 3.001 2.5 3.001 3.75c0 1.647.506 3.2 1.424 4.374.71.907 1.601 1.508 2.576 1.753V15h-1.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-1.5V9.877c.975-.244 1.866-.846 2.576-1.753.918-1.174 1.424-2.727 1.424-4.374 0-1.249-.293-2.455-.847-3.487zM4.595 1h6.809a6.46 6.46 0 0 1 .59 3H4.003a6.46 6.46 0 0 1 .59-3z",
    key: "k0"
  }));
});
export const Glass = styled(StyledIcon).withConfig({
  displayName: "Glass",
  componentId: "sc-1vwwucw-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Glass.displayName = 'Glass';
export const GlassDimensions = {
  height: 16,
  width: 16
};