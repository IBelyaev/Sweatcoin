import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Equalizer2-title"
  }, title), React.createElement("path", {
    d: "M14 7h.25c.412 0 .75-.338.75-.75v-2.5a.752.752 0 0 0-.75-.75H14V0h-2v3h-.25a.752.752 0 0 0-.75.75v2.5c0 .412.338.75.75.75H12v9h2V7zm-2-3h2v2h-2V4zm-2.75 9c.412 0 .75-.338.75-.75v-2.5A.753.753 0 0 0 9.25 9H9V0H7v9h-.25a.753.753 0 0 0-.75.75v2.5c0 .412.338.75.75.75H7v3h2v-3h.25zM7 10h2v2H7v-2zM4.25 7c.412 0 .75-.338.75-.75v-2.5A.752.752 0 0 0 4.25 3H4V0H2v3h-.25a.752.752 0 0 0-.75.75v2.5c0 .412.337.75.75.75H2v9h2V7h.25zM2 4h2v2H2V4z",
    key: "k0"
  }));
});
export const Equalizer2 = styled(StyledIcon).withConfig({
  displayName: "Equalizer2",
  componentId: "sc-1sezijx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Equalizer2.displayName = 'Equalizer2';
export const Equalizer2Dimensions = {
  height: 16,
  width: 16
};