import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Trophy-title"
  }, title), React.createElement("path", {
    d: "M13 3V1H3v2H0v2a3 3 0 0 0 3.9 2.862A5 5 0 0 0 7 9.899v3.1H6a2 2 0 0 0-2 2h8a2 2 0 0 0-2-2H9v-3.1a5.003 5.003 0 0 0 3.1-2.037A3 3 0 0 0 16 5V3h-3zM3 6.813A1.815 1.815 0 0 1 1.187 5V4H3v1c0 .628.116 1.229.327 1.782-.106.019-.216.03-.327.03zM14.813 5a1.815 1.815 0 0 1-2.14 1.783A4.994 4.994 0 0 0 13 5.001v-1h1.813v1z",
    key: "k0"
  }));
});
export const Trophy = styled(StyledIcon).withConfig({
  displayName: "Trophy",
  componentId: "sc-1byi7zh-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Trophy.displayName = 'Trophy';
export const TrophyDimensions = {
  height: 16,
  width: 16
};