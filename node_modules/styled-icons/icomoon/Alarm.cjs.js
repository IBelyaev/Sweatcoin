"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlarmDimensions = exports.Alarm = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Alarm-title"
  }, title), React.createElement("path", {
    d: "M8 2a7 7 0 1 0 0 14A7 7 0 0 0 8 2zm0 12.625a5.624 5.624 0 1 1 0-11.25 5.624 5.624 0 1 1 0 11.25zm6.606-10.138a3 3 0 0 0-4.98-3.321 8.008 8.008 0 0 1 4.98 3.322zM6.374 1.166a3 3 0 1 0-4.98 3.321 8.006 8.006 0 0 1 4.98-3.322z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M8 9V5H7v5h4V9z",
    key: "k1"
  }));
});
var Alarm = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Alarmcjs__Alarm",
  componentId: "sc-1hbip2q-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Alarm = Alarm;
Alarm.displayName = 'Alarm';
var AlarmDimensions = {
  height: 16,
  width: 16
};
exports.AlarmDimensions = AlarmDimensions;