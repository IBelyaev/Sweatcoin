import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Spades-title"
  }, title), React.createElement("path", {
    d: "M12.775 5.44C9.751 3.192 8.708 1.393 8.001 0c-.708 1.393-1.75 3.192-4.774 5.44-5.157 3.833-.303 9.182 3.965 6.238-.278 1.827-1.227 3.159-2.191 3.733v.59h6v-.59c-.964-.574-1.913-1.906-2.191-3.733 4.268 2.944 9.122-2.405 3.965-6.238z",
    key: "k0"
  }));
});
export const Spades = styled(StyledIcon).withConfig({
  displayName: "Spades",
  componentId: "gfi145-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Spades.displayName = 'Spades';
export const SpadesDimensions = {
  height: 16,
  width: 16
};