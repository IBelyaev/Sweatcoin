import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Stumbleupon-title"
  }, title), React.createElement("path", {
    d: "M8 5c-.55 0-1 .45-1 1v4c0 1.653-1.347 3-3 3s-3-1.347-3-3V8h2v2c0 .55.45 1 1 1s1-.45 1-1V6c0-1.653 1.347-3 3-3s3 1.347 3 2.781v.969l-1.281.375L9 6.75v-.969C9 5.45 8.55 5 8 5z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M15 10c0 1.653-1.347 3-3 3s-3-1.347-3-3.219V7.843l.719.375L11 7.843v1.938c0 .769.45 1.219 1 1.219s1-.45 1-1V8h2v2z",
    key: "k1"
  }));
});
export const Stumbleupon = styled(StyledIcon).withConfig({
  displayName: "Stumbleupon",
  componentId: "sc-1w8o88-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Stumbleupon.displayName = 'Stumbleupon';
export const StumbleuponDimensions = {
  height: 16,
  width: 16
};