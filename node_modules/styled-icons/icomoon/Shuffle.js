import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Shuffle-title"
  }, title), React.createElement("path", {
    d: "M12 11h-1.586l-2.5-2.5 2.5-2.5H12v2.5L15.5 5 12 1.5V4h-2a.997.997 0 0 0-.707.293L6.5 7.086 3.707 4.293A1 1 0 0 0 3 4H0v2h2.586l2.5 2.5-2.5 2.5H0v2h3c.265 0 .52-.105.707-.293L6.5 9.914l2.793 2.793A1 1 0 0 0 10 13h2v2.5l3.5-3.5L12 8.5V11z",
    key: "k0"
  }));
});
export const Shuffle = styled(StyledIcon).withConfig({
  displayName: "Shuffle",
  componentId: "sc-10y3r12-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Shuffle.displayName = 'Shuffle';
export const ShuffleDimensions = {
  height: 16,
  width: 16
};