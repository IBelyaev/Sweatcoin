import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Meter-title"
  }, title), React.createElement("path", {
    d: "M8 1a8 8 0 0 1 3.875 15h-7.75A8 8 0 0 1 8 1zm4.53 12.53A6.364 6.364 0 0 0 14.406 9H13V8h1.329a6.346 6.346 0 0 0-.665-2H12V5h1.004a6.372 6.372 0 0 0-3.005-2.089V4h-1V2.671a6.506 6.506 0 0 0-2 0V4h-1V2.911A6.384 6.384 0 0 0 2.994 5h1.004v1H2.334a6.346 6.346 0 0 0-.665 2h1.329v1H1.592c0 1.711.666 3.32 1.876 4.53.167.167.343.324.524.47h3.006l.571-8h.857l.571 8h3.006c.182-.146.357-.303.524-.47z",
    key: "k0"
  }));
});
export const Meter = styled(StyledIcon).withConfig({
  displayName: "Meter",
  componentId: "sc-15jcfy2-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Meter.displayName = 'Meter';
export const MeterDimensions = {
  height: 16,
  width: 16
};