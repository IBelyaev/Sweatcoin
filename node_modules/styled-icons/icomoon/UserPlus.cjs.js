"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserPlusDimensions = exports.UserPlus = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "UserPlus-title"
  }, title), React.createElement("path", {
    d: "M6 11.5a5.508 5.508 0 0 1 3.594-5.159A4.574 4.574 0 0 0 10 4.5C10 2.015 10 0 7 0S4 2.015 4 4.5c0 1.548.898 3.095 2 3.716v.825C2.608 9.318 0 10.985 0 13h6.208A5.5 5.5 0 0 1 6 11.5z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11.5 7a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9zm2.5 5h-2v2h-1v-2H9v-1h2V9h1v2h2v1z",
    key: "k1"
  }));
});
var UserPlus = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "UserPluscjs__UserPlus",
  componentId: "sc-9cf6pa-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.UserPlus = UserPlus;
UserPlus.displayName = 'UserPlus';
var UserPlusDimensions = {
  height: 16,
  width: 16
};
exports.UserPlusDimensions = UserPlusDimensions;