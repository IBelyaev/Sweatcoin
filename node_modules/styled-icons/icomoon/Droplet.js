import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Droplet-title"
  }, title), React.createElement("path", {
    d: "M13.51 7.393C12.483 4.527 10.305 1.953 8 0 5.695 1.953 3.518 4.527 2.49 7.393c-.635 1.772-.698 3.696.197 5.397C3.716 14.745 5.791 16 8 16s4.284-1.255 5.313-3.21c.895-1.701.832-3.624.197-5.397zm-1.967 4.466A4.045 4.045 0 0 1 8 14a4.03 4.03 0 0 1-2.377-.791c.207.027.416.041.627.041a5.056 5.056 0 0 0 4.428-2.676c.701-1.333.64-2.716.373-3.818.227.44.42.878.576 1.311.353.985.625 2.443-.084 3.791z",
    key: "k0"
  }));
});
export const Droplet = styled(StyledIcon).withConfig({
  displayName: "Droplet",
  componentId: "sc-1x0adpg-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Droplet.displayName = 'Droplet';
export const DropletDimensions = {
  height: 16,
  width: 16
};