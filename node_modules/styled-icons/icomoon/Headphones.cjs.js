"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HeadphonesDimensions = exports.Headphones = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Headphones-title"
  }, title), React.createElement("path", {
    d: "M4.5 9h-1v7h1c.275 0 .5-.225.5-.5v-6c0-.275-.225-.5-.5-.5zM11.5 9c-.275 0-.5.225-.5.5v6c0 .275.225.5.5.5h1V9h-1z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M16 8A8 8 0 1 0 .479 10.732 3.5 3.5 0 0 0 3 15.964V9.036a3.478 3.478 0 0 0-1.371.506 6.5 6.5 0 1 1 12.743 0A3.484 3.484 0 0 0 13 9.035v6.929a3.5 3.5 0 0 0 2.521-5.232C15.831 9.879 16 8.959 16 8z",
    key: "k1"
  }));
});
var Headphones = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Headphonescjs__Headphones",
  componentId: "wo16rs-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Headphones = Headphones;
Headphones.displayName = 'Headphones';
var HeadphonesDimensions = {
  height: 16,
  width: 16
};
exports.HeadphonesDimensions = HeadphonesDimensions;