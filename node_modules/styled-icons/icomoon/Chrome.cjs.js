"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChromeDimensions = exports.Chrome = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Chrome-title"
  }, title), React.createElement("path", {
    d: "M4.036 6.977l-2.29-3.966A7.986 7.986 0 0 1 8-.001a7.994 7.994 0 0 1 6.883 3.922H8.355a4.1 4.1 0 0 0-4.32 3.055zm6.828-1.899h4.585a8 8 0 0 1-7.358 10.921l3.272-5.667a4.08 4.08 0 0 0-.499-5.254zM5.094 8c0-1.603 1.304-2.906 2.906-2.906S10.906 6.398 10.906 8 9.602 10.906 8 10.906 5.094 9.602 5.094 8zm4.003 3.944l-2.29 3.967a8.001 8.001 0 0 1-5.78-11.833l3.266 5.657a4.1 4.1 0 0 0 4.804 2.21z",
    key: "k0"
  }));
});
var Chrome = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Chromecjs__Chrome",
  componentId: "sc-12oxkcx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Chrome = Chrome;
Chrome.displayName = 'Chrome';
var ChromeDimensions = {
  height: 16,
  width: 16
};
exports.ChromeDimensions = ChromeDimensions;