import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Question-title"
  }, title), React.createElement("path", {
    d: "M7 11h2v2H7zm4-7a1 1 0 0 1 1 1v3l-3 2H7V9l3-2V6H5V4h6zM8 1.5c-1.736 0-3.369.676-4.596 1.904S1.5 6.264 1.5 8c0 1.736.676 3.369 1.904 4.596S6.264 14.5 8 14.5c1.736 0 3.369-.676 4.596-1.904S14.5 9.736 14.5 8c0-1.736-.676-3.369-1.904-4.596S9.736 1.5 8 1.5zM8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0z",
    key: "k0"
  }));
});
export const Question = styled(StyledIcon).withConfig({
  displayName: "Question",
  componentId: "sc-9t0pu4-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Question.displayName = 'Question';
export const QuestionDimensions = {
  height: 16,
  width: 16
};