import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 18 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Images-title"
  }, title), React.createElement("path", {
    d: "M17 2h-1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v12c0 .55.45 1 1 1h1v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM2 3v10h-.998L1 12.998V1.002L1.002 1h13.996l.002.002V2H3c-.55 0-1 .45-1 1zm15 11.998l-.002.002H3.002L3 14.998V3.002L3.002 3h13.996l.002.002v11.996z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M15 5.5a1.5 1.5 0 1 1-3.001-.001A1.5 1.5 0 0 1 15 5.5zM16 14H4v-2l3.5-6 4 5h1L16 8z",
    key: "k1"
  }));
});
export const Images = styled(StyledIcon).withConfig({
  displayName: "Images",
  componentId: "sc-121lnlh-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Images.displayName = 'Images';
export const ImagesDimensions = {
  height: 16,
  width: 16
};