import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Blog-title"
  }, title), React.createElement("path", {
    d: "M6 0v1.5a8.46 8.46 0 0 1 6.01 2.489 8.472 8.472 0 0 1 2.489 6.01h1.5c0-5.523-4.477-10-10-10z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M6 3v1.5c1.469 0 2.85.572 3.889 1.611S11.5 8.531 11.5 10H13a7 7 0 0 0-7-7zM7.5 6l-1 1L3 8l-3 6.5.396.396 3.638-3.638a1 1 0 1 1 .707.707l-3.638 3.638.396.396 6.5-3 1-3.5 1-1-2.5-2.5z",
    key: "k1"
  }));
});
export const Blog = styled(StyledIcon).withConfig({
  displayName: "Blog",
  componentId: "ep3nlo-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Blog.displayName = 'Blog';
export const BlogDimensions = {
  height: 16,
  width: 16
};