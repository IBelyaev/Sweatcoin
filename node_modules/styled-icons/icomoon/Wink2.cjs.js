"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Wink2Dimensions = exports.Wink2 = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Wink2-title"
  }, title), React.createElement("path", {
    d: "M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3 4c.552 0 1 .672 1 1.5S11.552 7 11 7s-1-.672-1-1.5.448-1.5 1-1.5zm-5.5.876c.932 0 1.594.349 1.594.895 0 .116.06.672-.003.775-.232-.384-.856-.659-1.591-.659s-1.359.275-1.591.659c-.062-.103-.003-.659-.003-.775 0-.546.662-.895 1.594-.895zM7.818 13c-1.863 0-3.498-1.004-4.42-2.515 1.1.86 3.04 1.028 5.083.625 2.191-.433 3.892-1.43 4.507-2.759C12.65 10.975 10.464 13 7.818 13z",
    key: "k0"
  }));
});
var Wink2 = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Wink2cjs__Wink2",
  componentId: "r6u4h-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Wink2 = Wink2;
Wink2.displayName = 'Wink2';
var Wink2Dimensions = {
  height: 16,
  width: 16
};
exports.Wink2Dimensions = Wink2Dimensions;