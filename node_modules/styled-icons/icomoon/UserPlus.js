import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "UserPlus-title"
  }, title), React.createElement("path", {
    d: "M6 11.5a5.508 5.508 0 0 1 3.594-5.159A4.574 4.574 0 0 0 10 4.5C10 2.015 10 0 7 0S4 2.015 4 4.5c0 1.548.898 3.095 2 3.716v.825C2.608 9.318 0 10.985 0 13h6.208A5.5 5.5 0 0 1 6 11.5z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M11.5 7a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9zm2.5 5h-2v2h-1v-2H9v-1h2V9h1v2h2v1z",
    key: "k1"
  }));
});
export const UserPlus = styled(StyledIcon).withConfig({
  displayName: "UserPlus",
  componentId: "sc-2s537y-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
UserPlus.displayName = 'UserPlus';
export const UserPlusDimensions = {
  height: 16,
  width: 16
};