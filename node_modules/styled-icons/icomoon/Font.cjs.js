"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FontDimensions = exports.Font = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Font-title"
  }, title), React.createElement("path", {
    d: "M12.494.253C11.08.253 10.172 0 8.715 0 4.007 0 1.812 2.681 1.812 5.404c0 1.604.76 2.132 2.259 2.132-.106-.232-.296-.486-.296-1.626 0-3.188 1.203-4.117 2.744-4.18 0 0-1.264 12.396-4.934 13.883v.385h4.947l1.688-8h3.091l.689-2H8.642l.812-3.847c.929.19 1.837.38 2.618.38.971 0 1.858-.296 2.343-2.533-.591.19-1.224.253-1.921.253z",
    key: "k0"
  }));
});
var Font = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Fontcjs__Font",
  componentId: "sc-1hyn7pa-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Font = Font;
Font.displayName = 'Font';
var FontDimensions = {
  height: 16,
  width: 16
};
exports.FontDimensions = FontDimensions;