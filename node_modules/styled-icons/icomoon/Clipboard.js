import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Clipboard-title"
  }, title), React.createElement("path", {
    d: "M14.5 2H10a2 2 0 1 0-4 0H1.5a.5.5 0 0 0-.5.5v13a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-13a.5.5 0 0 0-.5-.5zM8 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm6 14H2V3h2v1.5a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5V3h2v12z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M7 13.414L3.793 9.707l.914-.914L7 10.586l4.293-3.793.914.914z",
    key: "k1"
  }));
});
export const Clipboard = styled(StyledIcon).withConfig({
  displayName: "Clipboard",
  componentId: "sc-4blimx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Clipboard.displayName = 'Clipboard';
export const ClipboardDimensions = {
  height: 16,
  width: 16
};