import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "StarEmpty-title"
  }, title), React.createElement("path", {
    d: "M16 6.204l-5.528-.803L8 .392 5.528 5.401 0 6.204l4 3.899-.944 5.505L8 13.009l4.944 2.599L12 10.103l4-3.899zm-8 5.569l-3.492 1.836.667-3.888L2.35 6.968l3.904-.567L8 2.864l1.746 3.537 3.904.567-2.825 2.753.667 3.888L8 11.773z",
    key: "k0"
  }));
});
export const StarEmpty = styled(StyledIcon).withConfig({
  displayName: "StarEmpty",
  componentId: "sc-1enov0-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
StarEmpty.displayName = 'StarEmpty';
export const StarEmptyDimensions = {
  height: 16,
  width: 16
};