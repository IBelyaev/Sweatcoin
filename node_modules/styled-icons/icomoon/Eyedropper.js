import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Eyedropper-title"
  }, title), React.createElement("path", {
    d: "M15.414.586a2 2 0 0 0-2.828 0L9.897 3.275 8.001 1.379 5.88 3.5l1.663 1.663L.166 12.54a.56.56 0 0 0-.161.46H.001v2.5a.5.5 0 0 0 .5.5h2.563a.561.561 0 0 0 .398-.165l7.377-7.377 1.663 1.663L14.623 8l-1.896-1.896 2.689-2.689a2 2 0 0 0 0-2.828zM2.705 15H1v-1.705l7.337-7.337 1.704 1.704-7.337 7.337z",
    key: "k0"
  }));
});
export const Eyedropper = styled(StyledIcon).withConfig({
  displayName: "Eyedropper",
  componentId: "fy6fzd-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Eyedropper.displayName = 'Eyedropper';
export const EyedropperDimensions = {
  height: 16,
  width: 16
};