import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Spinner6-title"
  }, title), React.createElement("path", {
    d: "M6 2a2 2 0 1 1 3.999-.001A2 2 0 0 1 6 2zm6.359 6a1.641 1.641 0 0 1 3.282 0 1.641 1.641 0 0 1-3.282 0zm-1.602 4.243a1.486 1.486 0 1 1 2.971 0 1.486 1.486 0 0 1-2.971 0zM6.654 14a1.346 1.346 0 1 1 2.693.001A1.346 1.346 0 0 1 6.654 14zm-4.116-1.757a1.22 1.22 0 1 1 2.439 0 1.22 1.22 0 0 1-2.439 0zM.896 8a1.104 1.104 0 1 1 2.207 0A1.104 1.104 0 0 1 .896 8zm1.861-4.243a1 1 0 0 1 2 0 1 1 0 0 1-2 0zm11.297 0a1.811 1.811 0 1 1-3.623 0 1.811 1.811 0 0 1 3.623 0z",
    key: "k0"
  }));
});
export const Spinner6 = styled(StyledIcon).withConfig({
  displayName: "Spinner6",
  componentId: "sc-108ncf8-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Spinner6.displayName = 'Spinner6';
export const Spinner6Dimensions = {
  height: 16,
  width: 16
};