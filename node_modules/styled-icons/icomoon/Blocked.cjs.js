"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockedDimensions = exports.Blocked = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Blocked-title"
  }, title), React.createElement("path", {
    d: "M13.657 2.343C12.146.832 10.137 0 8 0S3.854.832 2.343 2.343C.832 3.854 0 5.863 0 8s.832 4.146 2.343 5.657C3.854 15.168 5.863 16 8 16s4.146-.832 5.657-2.343C15.168 12.146 16 10.137 16 8s-.832-4.146-2.343-5.657zM14 8a5.97 5.97 0 0 1-1.111 3.475L4.525 3.111A5.97 5.97 0 0 1 8 2c3.308 0 6 2.692 6 6zM2 8a5.97 5.97 0 0 1 1.111-3.475l8.364 8.364A5.97 5.97 0 0 1 8 14c-3.308 0-6-2.692-6-6z",
    key: "k0"
  }));
});
var Blocked = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Blockedcjs__Blocked",
  componentId: "m1m1a2-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Blocked = Blocked;
Blocked.displayName = 'Blocked';
var BlockedDimensions = {
  height: 16,
  width: 16
};
exports.BlockedDimensions = BlockedDimensions;