import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 18 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Keyboard-title"
  }, title), React.createElement("path", {
    d: "M17 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-7 2h2v2h-2V4zm3 3v2h-2V7h2zM7 4h2v2H7V4zm3 3v2H8V7h2zM4 4h2v2H4V4zm3 3v2H5V7h2zM2 4h1v2H2V4zm0 3h2v2H2V7zm1 5H2v-2h1v2zm9 0H4v-2h8v2zm4 0h-3v-2h3v2zm0-3h-2V7h2v2zm0-3h-3V4h3v2z",
    key: "k0"
  }));
});
export const Keyboard = styled(StyledIcon).withConfig({
  displayName: "Keyboard",
  componentId: "sc-1cefopf-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Keyboard.displayName = 'Keyboard';
export const KeyboardDimensions = {
  height: 16,
  width: 16
};