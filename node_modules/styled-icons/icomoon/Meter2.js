import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Meter2-title"
  }, title), React.createElement("path", {
    d: "M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zM4.732 13.034a4.501 4.501 0 0 0-2.688-5.762 5.953 5.953 0 0 1 1.714-3.514c1.133-1.133 2.64-1.757 4.243-1.757s3.109.624 4.243 1.757a5.958 5.958 0 0 1 1.714 3.514 4.501 4.501 0 0 0-2.688 5.762c-.964.629-2.09.966-3.268.966s-2.304-.338-3.268-.966zm3.889-3.018A.502.502 0 0 1 9 10.5v1c0 .275-.225.5-.5.5h-1a.501.501 0 0 1-.5-.5v-1a.5.5 0 0 1 .379-.484L7.75 3h.5l.371 7.016z",
    key: "k0"
  }));
});
export const Meter2 = styled(StyledIcon).withConfig({
  displayName: "Meter2",
  componentId: "sc-804o23-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Meter2.displayName = 'Meter2';
export const Meter2Dimensions = {
  height: 16,
  width: 16
};