"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tumblr2Dimensions = exports.Tumblr2 = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Tumblr2-title"
  }, title), React.createElement("path", {
    d: "M14.5 0h-13C.675 0 0 .675 0 1.5v13c0 .825.675 1.5 1.5 1.5h13c.825 0 1.5-.675 1.5-1.5v-13c0-.825-.675-1.5-1.5-1.5zm-3.066 12.884c-.472.222-.9.378-1.281.469a5.522 5.522 0 0 1-1.241.134c-.506 0-.803-.063-1.191-.191s-.719-.309-.994-.544c-.275-.238-.463-.488-.569-.753s-.159-.65-.159-1.156V6.971h-1.5V5.408c.434-.141.938-.344 1.244-.606.309-.263.559-.578.744-.947.188-.369.316-.837.388-1.406h1.569v2.55H11v1.972H8.447v2.831c0 .641-.009 1.009.059 1.191s.238.369.422.475c.244.147.525.219.838.219.559 0 1.116-.181 1.669-.544v1.741z",
    key: "k0"
  }));
});
var Tumblr2 = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Tumblr2cjs__Tumblr2",
  componentId: "xm8s31-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Tumblr2 = Tumblr2;
Tumblr2.displayName = 'Tumblr2';
var Tumblr2Dimensions = {
  height: 16,
  width: 16
};
exports.Tumblr2Dimensions = Tumblr2Dimensions;