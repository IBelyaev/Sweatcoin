import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Svg-title"
  }, title), React.createElement("path", {
    d: "M14.5 6.5c-.444 0-.843.193-1.118.5h-2.968l2.099-2.099a1.5 1.5 0 1 0-1.414-1.414L9 5.586V2.618a1.5 1.5 0 1 0-2 0v2.968L4.901 3.487a1.5 1.5 0 1 0-1.414 1.414L5.586 7H2.618a1.5 1.5 0 1 0 0 2h2.968l-2.099 2.099a1.5 1.5 0 1 0 1.414 1.414L7 10.414v2.968a1.5 1.5 0 1 0 2 0v-2.968l2.099 2.099a1.5 1.5 0 1 0 1.414-1.414L10.414 9h2.968A1.5 1.5 0 1 0 14.5 6.5z",
    key: "k0"
  }));
});
export const Svg = styled(StyledIcon).withConfig({
  displayName: "Svg",
  componentId: "sc-9knvh3-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Svg.displayName = 'Svg';
export const SvgDimensions = {
  height: 16,
  width: 16
};