import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "PhoneHangUp-title"
  }, title), React.createElement("path", {
    d: "M15.897 9c.125.867.207 2.053-.182 2.507-.643.751-4.714.751-4.714-.751 0-.756.67-1.252.027-2.003-.632-.738-1.766-.75-3.027-.751s-2.394.012-3.027.751c-.643.751.027 1.247.027 2.003 0 1.501-4.071 1.501-4.714.751C-.102 11.053-.02 9.867.105 9c.096-.579.339-1.203 1.118-2 1.168-1.09 2.935-1.98 6.716-2h.126c3.781.019 5.548.91 6.716 2 .778.797 1.022 1.421 1.118 2z",
    key: "k0"
  }));
});
export const PhoneHangUp = styled(StyledIcon).withConfig({
  displayName: "PhoneHangUp",
  componentId: "sc-1kqlm6c-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
PhoneHangUp.displayName = 'PhoneHangUp';
export const PhoneHangUpDimensions = {
  height: 16,
  width: 16
};