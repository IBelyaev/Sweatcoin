import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 16 16',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Leaf-title"
  }, title), React.createElement("path", {
    d: "M15.802 2.102C14.072.791 11.409.008 8.678.008c-3.377 0-6.129 1.179-7.549 3.235C.462 4.208.093 5.352.032 6.641c-.054 1.148.139 2.418.573 3.784C2.087 5.981 6.227 2.502 11 2.502c0 0-4.466 1.175-7.274 4.816A10.535 10.535 0 0 0 2.2 10.037 15.387 15.387 0 0 0 1 16.002h2s-.304-1.91.224-4.106a17.71 17.71 0 0 0 2.357.177c1.839 0 3.146-.398 4.115-1.252.868-.765 1.347-1.794 1.854-2.882.774-1.663 1.651-3.547 4.198-5.002a.5.5 0 0 0 .054-.833z",
    key: "k0"
  }));
});
export const Leaf = styled(StyledIcon).withConfig({
  displayName: "Leaf",
  componentId: "rni5tv-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Leaf.displayName = 'Leaf';
export const LeafDimensions = {
  height: 16,
  width: 16
};