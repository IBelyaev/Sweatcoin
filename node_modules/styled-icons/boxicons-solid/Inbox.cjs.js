"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InboxDimensions = exports.Inbox = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Inbox-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M17.279 4H6.721l-2.334 7h3.755c.446 1.722 1.997 3 3.858 3s3.412-1.278 3.858-3h3.755l-2.334-7z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M21.948 11.684l-3-9A.997.997 0 0 0 18 2H6a.998.998 0 0 0-.948.684l-3 9 .012.004A.928.928 0 0 0 2 12v7a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-7a.964.964 0 0 0-.063-.313l.011-.003zM16 11h-.142c-.446 1.722-1.997 3-3.858 3s-3.412-1.278-3.858-3H4.387l2.334-7H17.28l2.334 7H16z",
    key: "k1"
  }));
});
var Inbox = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Inboxcjs__Inbox",
  componentId: "sc-1rejmf1-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Inbox = Inbox;
Inbox.displayName = 'Inbox';
var InboxDimensions = {
  height: 24,
  width: 24
};
exports.InboxDimensions = InboxDimensions;