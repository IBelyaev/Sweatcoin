import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Buoy-title"
  }, title), React.createElement("path", {
    d: "M16.898 11h5.051c-.47-4.717-4.232-8.479-8.949-8.949v5.05A5.013 5.013 0 0 1 16.898 11zM13 21.949c4.717-.471 8.479-4.232 8.949-8.949h-5.051A5.013 5.013 0 0 1 13 16.899v5.05zM11 7.101v-5.05C6.283 2.521 2.521 6.283 2.051 11h5.051A5.013 5.013 0 0 1 11 7.101zm0 14.848v-5.05A5.013 5.013 0 0 1 7.102 13H2.051c.47 4.717 4.232 8.479 8.949 8.949z",
    key: "k0"
  }));
});
export const Buoy = styled(StyledIcon).withConfig({
  displayName: "Buoy",
  componentId: "sc-16rovjb-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Buoy.displayName = 'Buoy';
export const BuoyDimensions = {
  height: 24,
  width: 24
};