"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneIncomingDimensions = exports.PhoneIncoming = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "PhoneIncoming-title"
  }, title), React.createElement("path", {
    d: "M15.121 7.465L13 5.344V11h5.656l-2.121-2.121 5.172-5.172-1.414-1.414zm-.821 6.529l-1.66 1.66c-.578-.109-1.735-.471-2.926-1.66-1.193-1.193-1.553-2.354-1.661-2.926l1.661-1.66.701-.701L5 3.293l-.701.701-1 1a.996.996 0 0 0-.291.649c-.015.25-.302 6.172 4.291 10.766 4.006 4.006 9.024 4.299 10.407 4.299.201 0 .326-.006.357-.008a.994.994 0 0 0 .65-.291l1-1 .697-.697-5.414-5.414-.696.696z",
    key: "k0"
  }));
});
var PhoneIncoming = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "PhoneIncomingcjs__PhoneIncoming",
  componentId: "sc-1tf4jmf-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.PhoneIncoming = PhoneIncoming;
PhoneIncoming.displayName = 'PhoneIncoming';
var PhoneIncomingDimensions = {
  height: 24,
  width: 24
};
exports.PhoneIncomingDimensions = PhoneIncomingDimensions;