import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Chart-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M13.619 11.691l-4-2-3.476 5.794 1.714 1.03 2.524-4.206 4 2 3.476-5.794-1.714-1.03z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M21 20V4a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1zm-6.619-5.691l-4-2-2.523 4.206-1.715-1.029L9.62 9.692l4 2 2.523-4.206 1.715 1.029-3.477 5.794z",
    key: "k1"
  }));
});
export const Chart = styled(StyledIcon).withConfig({
  displayName: "Chart",
  componentId: "sc-18rhu41-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Chart.displayName = 'Chart';
export const ChartDimensions = {
  height: 24,
  width: 24
};