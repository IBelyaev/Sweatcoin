import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "CloudUpload-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M11 17h2v-3h3l-4-4-4 4h3z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M7 19h11c2.206 0 4-1.794 4-4a4.01 4.01 0 0 0-3.056-3.888C18.507 7.67 15.56 5 12 5 9.244 5 6.85 6.611 5.757 9.15 3.609 9.792 2 11.82 2 14c0 2.757 2.243 5 5 5zm5-9l4 4h-3v3h-2v-3H8l4-4z",
    key: "k1"
  }));
});
export const CloudUpload = styled(StyledIcon).withConfig({
  displayName: "CloudUpload",
  componentId: "sc-19xo8fx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
CloudUpload.displayName = 'CloudUpload';
export const CloudUploadDimensions = {
  height: 24,
  width: 24
};