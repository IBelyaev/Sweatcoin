import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Car-title"
  }, title), React.createElement("path", {
    d: "M-566 314h-.3l-1.8-5.3c-.1-.4-.5-.7-.9-.7h-12c-.4 0-.8.3-.9.7l-1.8 5.3h-.3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1v2c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-2h12v2c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-2c.6 0 1-.4 1-1v-6c0-.6-.4-1-1-1zm-15 5h-2v-2h2v2zm11.8-5h-12.4l1.3-4h10.6l1.3 4h-.8zm2.2 5h-2v-2h2v2z",
    key: "k0"
  }));
});
export const Car = styled(StyledIcon).withConfig({
  displayName: "Car",
  componentId: "cqu6cy-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Car.displayName = 'Car';
export const CarDimensions = {
  height: 24,
  width: 24
};