import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "FolderOpen-title"
  }, title), React.createElement("path", {
    d: "M21.835 11.449A1.003 1.003 0 0 0 21 11h-1V7a1 1 0 0 0-1-1h-8.655L8.061 4.213A1 1 0 0 0 7.444 4H3a1 1 0 0 0-1 1v14h.007a1 1 0 0 0 .158.551c.186.28.499.449.835.449h15c.4 0 .762-.238.919-.606l3-7a1 1 0 0 0-.084-.945zM7.1 6l2.284 1.787A.997.997 0 0 0 10 8h8v3H6c-.4 0-.762.238-.919.606L4 14.129V6h3.1z",
    key: "k0"
  }));
});
export const FolderOpen = styled(StyledIcon).withConfig({
  displayName: "FolderOpen",
  componentId: "tp4d1u-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
FolderOpen.displayName = 'FolderOpen';
export const FolderOpenDimensions = {
  height: 24,
  width: 24
};