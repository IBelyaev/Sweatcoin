import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "UserX-title"
  }, title), React.createElement("path", {
    d: "M8 12c1.648 0 3-1.353 3-3.001 0-1.649-1.352-3-3-3-1.647 0-3 1.351-3 3A3.013 3.013 0 0 0 8 12zm0 1.75c-3.295 0-6 2.281-6 4.5V19h12v-.75c0-2.219-2.705-4.5-6-4.5zm12.293-5.457L18 10.586l-2.293-2.293-1.414 1.414 2.292 2.292-2.293 2.293 1.414 1.414 2.293-2.293 2.294 2.294 1.414-1.414L19.414 12l2.293-2.293z",
    key: "k0"
  }));
});
export const UserX = styled(StyledIcon).withConfig({
  displayName: "UserX",
  componentId: "sc-15zl9fx-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
UserX.displayName = 'UserX';
export const UserXDimensions = {
  height: 24,
  width: 24
};