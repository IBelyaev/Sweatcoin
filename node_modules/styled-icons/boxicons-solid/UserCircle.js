import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "UserCircle-title"
  }, title), React.createElement("path", {
    d: "M12 2C6.579 2 2 6.579 2 12s4.579 10 10 10 10-4.579 10-10S17.421 2 12 2zm5.495 15.746c-1.15-1.388-3.18-2.434-5.495-2.434s-4.345 1.046-5.495 2.434C4.974 16.278 4 14.23 4 12c0-4.337 3.663-8 8-8s8 3.663 8 8c0 2.23-.974 4.278-2.505 5.746z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12 7a3.512 3.512 0 0 0-3.5 3.5c0 1.922 1.578 3.5 3.5 3.5 1.923 0 3.5-1.578 3.5-3.5A3.51 3.51 0 0 0 12 7z",
    key: "k1"
  }));
});
export const UserCircle = styled(StyledIcon).withConfig({
  displayName: "UserCircle",
  componentId: "sc-4s5lbd-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
UserCircle.displayName = 'UserCircle';
export const UserCircleDimensions = {
  height: 24,
  width: 24
};