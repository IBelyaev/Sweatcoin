import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Sun-title"
  }, title), React.createElement("path", {
    d: "M7.993 12c0 2.209 1.798 4.007 4.007 4.007s4.007-1.798 4.007-4.007S14.209 7.993 12 7.993 7.993 9.791 7.993 12zm10.714 5.293l-1.414 1.414-2-2 1.414-1.414zM7.293 8.707l-2-2 1.414-1.414 2 2zM3.513 11h2.829v2H3.513zm14.142 0h2.828v2h-2.828zm-6.657-7.485h2v2.829h-2zm0 14.142h2v2.828h-2zm4.293-10.363l2.002-2.001 1.414 1.414-2.001 2.001zM6.706 18.707l-1.414-1.414 1.999-2 1.414 1.415z",
    key: "k0"
  }));
});
export const Sun = styled(StyledIcon).withConfig({
  displayName: "Sun",
  componentId: "sc-1wnjx3t-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Sun.displayName = 'Sun';
export const SunDimensions = {
  height: 24,
  width: 24
};