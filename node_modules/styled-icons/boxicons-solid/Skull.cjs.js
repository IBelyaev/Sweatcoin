"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkullDimensions = exports.Skull = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Skull-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M16 8c-1.121 0-2 1.098-2 2.5s.879 2.5 2 2.5 2-1.098 2-2.5S17.121 8 16 8zM8 8c-1.121 0-2 1.098-2 2.5S6.879 13 8 13s2-1.098 2-2.5S9.121 8 8 8z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12 2C5.505 2 2 6.637 2 11c0 2.129 1.009 3.979 3 5.508V20a1 1 0 0 0 1 1h2v-3h2v3h4v-3h2v3h2a1 1 0 0 0 1-1v-3.493c1.991-1.528 3-3.379 3-5.507 0-4.363-3.505-9-10-9zM8 13c-1.121 0-2-1.098-2-2.5S6.879 8 8 8s2 1.098 2 2.5S9.121 13 8 13zm8 0c-1.121 0-2-1.098-2-2.5S14.879 8 16 8s2 1.098 2 2.5-.879 2.5-2 2.5z",
    key: "k1"
  }));
});
var Skull = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Skullcjs__Skull",
  componentId: "qm7m69-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Skull = Skull;
Skull.displayName = 'Skull';
var SkullDimensions = {
  height: 24,
  width: 24
};
exports.SkullDimensions = SkullDimensions;