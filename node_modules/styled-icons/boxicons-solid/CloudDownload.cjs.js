"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudDownloadDimensions = exports.CloudDownload = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "CloudDownload-title"
  }, title), React.createElement("path", {
    fill: "none",
    d: "M13 10h-2v3H8l4 4 4-4h-3z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M18.944 11.112C18.507 7.67 15.56 5 12 5 9.244 5 6.85 6.61 5.757 9.149 3.609 9.792 2 11.82 2 14c0 2.657 2.089 4.815 4.708 4.971V19H17.99v-.003L18 19c2.206 0 4-1.794 4-4a4.008 4.008 0 0 0-3.056-3.888zM12 17l-4-4h3v-3h2v3h3l-4 4z",
    key: "k1"
  }));
});
var CloudDownload = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "CloudDownloadcjs__CloudDownload",
  componentId: "ljrn4a-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.CloudDownload = CloudDownload;
CloudDownload.displayName = 'CloudDownload';
var CloudDownloadDimensions = {
  height: 24,
  width: 24
};
exports.CloudDownloadDimensions = CloudDownloadDimensions;