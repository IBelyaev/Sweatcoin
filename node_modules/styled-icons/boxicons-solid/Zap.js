import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Zap-title"
  }, title), React.createElement("path", {
    d: "M2.959 12.457l7.701 2.2-2.959 7.398L21.169 11.58l-8.008-2.288 1.398-6.984z",
    key: "k0"
  }));
});
export const Zap = styled(StyledIcon).withConfig({
  displayName: "Zap",
  componentId: "k0303p-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Zap.displayName = 'Zap';
export const ZapDimensions = {
  height: 24,
  width: 24
};