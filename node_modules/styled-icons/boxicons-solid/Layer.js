import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Layer-title"
  }, title), React.createElement("path", {
    d: "M21.586 8.689l-9-6.5a1.003 1.003 0 0 0-1.172 0l-9 6.5a1.001 1.001 0 0 0 0 1.622l9 6.5a1.003 1.003 0 0 0 1.172 0l9-6.5a1.001 1.001 0 0 0 0-1.622z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M12 22a.995.995 0 0 0 .588-.191l9.037-6.572-1.7-1.237L12 19.764 4.075 14l-1.7 1.236 9.037 6.572A.989.989 0 0 0 12 22z",
    key: "k1"
  }));
});
export const Layer = styled(StyledIcon).withConfig({
  displayName: "Layer",
  componentId: "slw39w-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Layer.displayName = 'Layer';
export const LayerDimensions = {
  height: 24,
  width: 24
};