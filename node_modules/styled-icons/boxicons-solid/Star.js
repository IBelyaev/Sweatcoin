import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Star-title"
  }, title), React.createElement("path", {
    d: "M20.531 9.965a1.002 1.002 0 0 0-.808-.68L15.008 8.6l-2.111-4.275c-.336-.684-1.457-.684-1.793 0L8.992 8.6l-4.716.685a1.001 1.001 0 0 0-.554 1.705l3.413 3.328-.804 4.699a.997.997 0 1 0 1.451 1.054L12 17.854l4.218 2.218a1 1 0 0 0 1.451-1.054l-.804-4.699 3.413-3.328c.273-.266.37-.664.253-1.026zM9.283 13.619",
    key: "k0"
  }));
});
export const Star = styled(StyledIcon).withConfig({
  displayName: "Star",
  componentId: "b0x27i-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Star.displayName = 'Star';
export const StarDimensions = {
  height: 24,
  width: 24
};