"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GbpDimensions = exports.Gbp = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Gbp-title"
  }, title), React.createElement("path", {
    fillRule: "evenodd",
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.913-17.185H9v2.637h2.087v4.462L9 22.523V24.5h13.947v-2.713h-8.585v-4.335h6.578v-2.637h-6.578V12.56c0-1.952 1.057-3.169 2.827-3.169 1.479 0 2.377.685 3.328 1.85L23 9.34c-1.268-1.598-2.906-2.84-5.838-2.84-3.856 0-6.075 2.307-6.075 5.983z",
    key: "k0"
  }));
});
var Gbp = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Gbpcjs__Gbp",
  componentId: "sc-16cw2l0-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Gbp = Gbp;
Gbp.displayName = 'Gbp';
var GbpDimensions = {
  height: 32,
  width: 32
};
exports.GbpDimensions = GbpDimensions;