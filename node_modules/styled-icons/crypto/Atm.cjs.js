"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AtmDimensions = exports.Atm = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Atm-title"
  }, title), React.createElement("path", {
    fillRule: "evenodd",
    d: "M20.167 18.702a4.369 4.369 0 0 0 1.586-5.783L18.53 6.857a4.369 4.369 0 0 0-5.909-1.806l-.124.066a4.369 4.369 0 0 0-1.806 5.908l.956 1.798c.072-.044.145-.086.22-.126l.124-.066a4.369 4.369 0 0 1 5.909 1.806zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.167-13.298a4.438 4.438 0 0 1-.22.126l-.124.065a4.369 4.369 0 0 1-5.909-1.806l-2.267-4.264a4.369 4.369 0 0 0-1.586 5.782l3.222 6.06a4.369 4.369 0 0 0 5.908 1.806l.124-.066a4.369 4.369 0 0 0 1.807-5.908z",
    key: "k0"
  }));
});
var Atm = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Atmcjs__Atm",
  componentId: "sc-16g1x1s-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Atm = Atm;
Atm.displayName = 'Atm';
var AtmDimensions = {
  height: 32,
  width: 32
};
exports.AtmDimensions = AtmDimensions;