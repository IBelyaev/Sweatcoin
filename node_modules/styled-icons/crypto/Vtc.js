import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Vtc-title"
  }, title), React.createElement("path", {
    fillRule: "evenodd",
    d: "M27.25 4.624a13.105 13.105 0 0 0-.312-.29L15.783 19.787l-4.263-5.438H4.582l-1.95 2.22H6.26l8.661 11.194c.29.272.576.408.862.408.285 0 .557-.136.816-.408L30.294 8.82a15.158 15.158 0 0 0-.295-.574A15.928 15.928 0 0 1 32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0c4.386 0 8.36 1.765 11.25 4.624z",
    key: "k0"
  }));
});
export const Vtc = styled(StyledIcon).withConfig({
  displayName: "Vtc",
  componentId: "jhvyvt-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Vtc.displayName = 'Vtc';
export const VtcDimensions = {
  height: 32,
  width: 32
};