import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Rdn-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10 6.006c.083.046.173.078.258.118 1.55.682 3.04 1.526 4.361 2.595 1.214.98 2.282 2.162 3.047 3.531.715 1.278 1.169 2.72 1.212 4.192a5 5 0 0 1-.022.624h4.134c.062-1.56-.167-3.13-.649-4.614a15.153 15.153 0 0 0-1.972-3.945 14.88 14.88 0 0 0-2.046-2.391c-.064-.05-.114-.14-.212-.11H10zm3.002 7.327L13 26c1.72-1.103 3.435-2.215 5.156-3.317-.33-.607-.667-1.211-1-1.817a4715.11 4715.11 0 0 0-4.155-7.533z",
    key: "k0"
  }));
});
export const Rdn = styled(StyledIcon).withConfig({
  displayName: "Rdn",
  componentId: "sc-4vhl0r-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Rdn.displayName = 'Rdn';
export const RdnDimensions = {
  height: 32,
  width: 32
};