"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BtcdDimensions = exports.Btcd = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Btcd-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.078-12.644c.908 1.422 1.345 4.4 1.268 5.467C30.31 20.71 26.562 7.567 18.586 7c0 2.945-.678 5.322-1.508 5.322 3.267.2 5.08 5.467 0 7.034zM6 17.8c5.954 0 10.773-4.823 10.773-10.79h-5.561c.01 2.923-2.317 5.312-5.201 5.323H6V17.8zm7.287-.99c-1.507 1.357-2.349 2.057-6.478 2.723 2.436 0 4.403 2.445 4.403 5.467h5.56c0-.911-.185-5.478-3.485-8.19z",
    key: "k0"
  }));
});
var Btcd = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "Btcdcjs__Btcd",
  componentId: "sc-4kaokw-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.Btcd = Btcd;
Btcd.displayName = 'Btcd';
var BtcdDimensions = {
  height: 32,
  width: 32
};
exports.BtcdDimensions = BtcdDimensions;