import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Elix-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.902-8.404l5.887 2.345 5.884-2.348-3.186-7.61 3.188-7.618-5.886-2.342-5.887 2.345 3.189 7.615z",
    key: "k0"
  }), ",", React.createElement("path", {
    fillOpacity: .197,
    d: "M15.985 15.984v5.306l-5.89 2.31 5.89-7.62v-5.306l5.89-2.31z",
    key: "k1"
  }), ",", React.createElement("path", {
    fillOpacity: .5,
    d: "M15.985 21.29v4.651l-5.89-2.344 5.89-2.315v-5.298l-5.89-7.62 5.89 2.31V6.023l5.89 2.343-5.89 2.315v5.299l5.89 7.62z",
    key: "k2"
  }), ",", React.createElement("path", {
    fillOpacity: .75,
    d: "M10.095 8.366l5.89-2.343v4.658zm11.78 15.231l-5.89 2.344v-4.659z",
    key: "k3"
  }));
});
export const Elix = styled(StyledIcon).withConfig({
  displayName: "Elix",
  componentId: "wi940r-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Elix.displayName = 'Elix';
export const ElixDimensions = {
  height: 32,
  width: 32
};