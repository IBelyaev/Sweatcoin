import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Zec-title"
  }, title), React.createElement("path", {
    fillRule: "evenodd",
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.904-12.154a37.083 37.083 0 0 0 1.518-1.778 462.138 462.138 0 0 0 3.714-4.58c.387-.48.968-.958 1.065-1.505.194-1.026.065-2.12.065-3.248H17.55V6h-3.132v2.803h-3.585v3.35h6.039c-.55.65-1.033 1.197-1.518 1.779a462.137 462.137 0 0 0-3.714 4.58c-.355.48-.936.958-1.033 1.505-.194 1.026-.065 2.12-.065 3.214h3.876V26h3.261c-.064-.957-.097-1.846-.161-2.803h3.875v-3.35h-6.297z",
    key: "k0"
  }));
});
export const Zec = styled(StyledIcon).withConfig({
  displayName: "Zec",
  componentId: "sc-67y22u-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Zec.displayName = 'Zec';
export const ZecDimensions = {
  height: 32,
  width: 32
};