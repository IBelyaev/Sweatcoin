import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 32 32',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Xuc-title"
  }, title), React.createElement("path", {
    d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-16c0-6.075-4.925-11-11-11S5 9.924 5 16c0 6.075 4.925 11 11 11s11-4.925 11-11zm-3.77.346l-12.318.017a5.094 5.094 0 0 0 5.077 4.726 5.08 5.08 0 0 0 4.48-2.686h2.322a7.23 7.23 0 0 1-5.44 4.681v1.446l-2.24.698V23.16c-3.574-.435-6.345-3.474-6.345-7.165 0-3.605 2.647-6.587 6.103-7.125V7.467l2.239-.697v2.1c3.457.538 6.122 3.742 6.122 7.35 0 .126.007 0 0 .126zM11.25 14.13h9.477a5.095 5.095 0 0 0-4.738-3.229 5.093 5.093 0 0 0-4.738 3.23z",
    key: "k0"
  }));
});
export const Xuc = styled(StyledIcon).withConfig({
  displayName: "Xuc",
  componentId: "dfjv8l-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
Xuc.displayName = 'Xuc';
export const XucDimensions = {
  height: 32,
  width: 32
};