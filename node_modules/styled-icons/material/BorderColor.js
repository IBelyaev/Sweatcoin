import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "BorderColor-title"
  }, title), React.createElement("path", {
    d: "M17.75 7L14 3.25l-10 10V17h3.75l10-10zm2.96-2.96a.996.996 0 0 0 0-1.41L18.37.29a.996.996 0 0 0-1.41 0L15 2.25 18.75 6l1.96-1.96z",
    key: "k0"
  }), ",", React.createElement("path", {
    fillOpacity: .36,
    d: "M0 20h24v4H0z",
    key: "k1"
  }));
});
export const BorderColor = styled(StyledIcon).withConfig({
  displayName: "BorderColor",
  componentId: "sc-1sq49y8-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
BorderColor.displayName = 'BorderColor';
export const BorderColorDimensions = {
  height: 24,
  width: 24
};