import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "SpeakerGroup-title"
  }, title), React.createElement("path", {
    d: "M18.2 1H9.8C8.81 1 8 1.81 8 2.8v14.4c0 .99.81 1.79 1.8 1.79l8.4.01c.99 0 1.8-.81 1.8-1.8V2.8c0-.99-.81-1.8-1.8-1.8zM14 3c1.1 0 2 .89 2 2s-.9 2-2 2-2-.89-2-2 .9-2 2-2zm0 13.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z",
    key: "k0"
  }), ",", React.createElement("circle", {
    cx: 14,
    cy: 12.5,
    r: 2.5,
    key: "k1"
  }), ",", React.createElement("path", {
    d: "M6 5H4v16a2 2 0 0 0 2 2h10v-2H6V5z",
    key: "k2"
  }));
});
export const SpeakerGroup = styled(StyledIcon).withConfig({
  displayName: "SpeakerGroup",
  componentId: "kbjg9c-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
SpeakerGroup.displayName = 'SpeakerGroup';
export const SpeakerGroupDimensions = {
  height: 24,
  width: 24
};