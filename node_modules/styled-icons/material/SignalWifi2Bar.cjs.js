"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SignalWifi2BarDimensions = exports.SignalWifi2Bar = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "SignalWifi2Bar-title"
  }, title), React.createElement("path", {
    fillOpacity: .3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z",
    key: "k0"
  }), ",", React.createElement("path", {
    d: "M4.79 12.52l7.2 8.98H12l.01-.01 7.2-8.98C18.85 12.24 16.1 10 12 10s-6.85 2.24-7.21 2.52z",
    key: "k1"
  }));
});
var SignalWifi2Bar = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "SignalWifi2Barcjs__SignalWifi2Bar",
  componentId: "j1c0s2-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.SignalWifi2Bar = SignalWifi2Bar;
SignalWifi2Bar.displayName = 'SignalWifi2Bar';
var SignalWifi2BarDimensions = {
  height: 24,
  width: 24
};
exports.SignalWifi2BarDimensions = SignalWifi2BarDimensions;