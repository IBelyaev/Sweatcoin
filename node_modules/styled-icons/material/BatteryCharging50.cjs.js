"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BatteryCharging50Dimensions = exports.BatteryCharging50 = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "BatteryCharging50-title"
  }, title), React.createElement("path", {
    d: "M14.47 13.5L11 20v-5.5H9l.53-1H7v7.17C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V13.5h-2.53z",
    key: "k0"
  }), ",", React.createElement("path", {
    fillOpacity: .3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v8.17h2.53L13 7v5.5h2l-.53 1H17V5.33C17 4.6 16.4 4 15.67 4z",
    key: "k1"
  }));
});
var BatteryCharging50 = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "BatteryCharging50cjs__BatteryCharging50",
  componentId: "ezvkgi-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.BatteryCharging50 = BatteryCharging50;
BatteryCharging50.displayName = 'BatteryCharging50';
var BatteryCharging50Dimensions = {
  height: 24,
  width: 24
};
exports.BatteryCharging50Dimensions = BatteryCharging50Dimensions;