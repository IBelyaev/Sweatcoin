"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BatteryCharging20Dimensions = exports.BatteryCharging20 = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var StyledIcon = React.forwardRef(function (props, ref) {
  var title = props.title,
      size = props.size,
      svgProps = (0, _objectWithoutProperties2.default)(props, ["title", "size"]);
  var iconProps = {
    viewBox: '0 0 24 24',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", (0, _extends2.default)({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "BatteryCharging20-title"
  }, title), React.createElement("path", {
    d: "M11 20v-3H7v3.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V17h-4.4L11 20z",
    key: "k0"
  }), ",", React.createElement("path", {
    fillOpacity: .3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V17h4v-2.5H9L13 7v5.5h2L12.6 17H17V5.33C17 4.6 16.4 4 15.67 4z",
    key: "k1"
  }));
});
var BatteryCharging20 = (0, _styledComponents.default)(StyledIcon).withConfig({
  displayName: "BatteryCharging20cjs__BatteryCharging20",
  componentId: "ki55ns-0"
})(["display:inline-block;vertical-align:middle;overflow:hidden;"]);
exports.BatteryCharging20 = BatteryCharging20;
BatteryCharging20.displayName = 'BatteryCharging20';
var BatteryCharging20Dimensions = {
  height: 24,
  width: 24
};
exports.BatteryCharging20Dimensions = BatteryCharging20Dimensions;