import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from 'react';
import styled from 'styled-components';
const StyledIcon = React.forwardRef((props, ref) => {
  const title = props.title,
        size = props.size,
        svgProps = _objectWithoutProperties(props, ["title", "size"]);

  const iconProps = {
    viewBox: '0 0 406 512',
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    "fill": "currentColor"
  };
  return React.createElement("svg", _extends({}, iconProps, svgProps, {
    ref: ref
  }), title && React.createElement("title", {
    key: "Sourcetree-title"
  }, title), React.createElement("path", {
    fill: "currentColor",
    d: "M406.2 203c0-112.1-90.9-203-203-203C91.1-.2.2 90.6 0 202.6-.1 290.8 56.6 368.9 140.5 396v101.7c0 7.9 6.4 14.3 14.3 14.3h96.4c7.9 0 14.3-6.4 14.3-14.3V396.1c83.7-27 140.6-105 140.7-193.1zm-271.6 0c0-90.8 137.3-90.8 137.3 0-.1 89.9-137.3 91-137.3 0z",
    key: "k0"
  }));
});
export const Sourcetree = styled(StyledIcon).withConfig({
  displayName: "Sourcetree",
  componentId: "sc-1jruts1-0"
})(["display:inline-block;vertical-align:-.125em;overflow:hidden;"]);
Sourcetree.displayName = 'Sourcetree';
export const SourcetreeDimensions = {
  height: undefined,
  width: undefined
};